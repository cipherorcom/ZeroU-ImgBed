name: Multi-Architecture Docker Build Test

on:
  workflow_dispatch:
    inputs:
      platforms:
        description: '目标平台（用逗号分隔）'
        required: true
        default: 'linux/amd64,linux/arm64'
        type: string
  schedule:
    # 每周日凌晨2点运行
    - cron: '0 2 * * 0'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test-multi-arch:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        platform:
          - linux/amd64
          - linux/arm64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract platform name
        id: platform
        run: |
          platform_name=$(echo "${{ matrix.platform }}" | sed 's/\//-/g')
          echo "name=${platform_name}" >> $GITHUB_OUTPUT

      - name: Build Docker image for ${{ matrix.platform }}
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ matrix.platform }}
          push: false
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:test-${{ steps.platform.outputs.name }}
          cache-from: type=gha,scope=${{ steps.platform.outputs.name }}
          cache-to: type=gha,mode=max,scope=${{ steps.platform.outputs.name }}

      - name: Test image functionality
        run: |
          echo "✅ ${{ matrix.platform }} 架构镜像构建成功"
          
  build-multi-arch:
    needs: test-multi-arch
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push multi-arch image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ inputs.platforms || 'linux/amd64,linux/arm64' }}
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:multi-arch-test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate test report
        run: |
          echo "## 🎯 多架构构建测试完成" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📊 测试结果" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ linux/amd64 (x86_64): 构建成功" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ linux/arm64 (ARM64): 构建成功" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🐳 测试镜像" >> $GITHUB_STEP_SUMMARY
          echo "\`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:multi-arch-test\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📋 支持的平台" >> $GITHUB_STEP_SUMMARY
          echo "- **x86_64**: Intel/AMD 处理器服务器" >> $GITHUB_STEP_SUMMARY
          echo "- **ARM64**: Apple M1/M2、ARM 服务器" >> $GITHUB_STEP_SUMMARY
